{"version":3,"file":"solarnetwork-test-utils.js","sources":["../src/testAuthBuilder.js","../src/testRequest.js"],"sourcesContent":["import { AuthorizationV2Builder } from 'solarnetwork-api-core';\n\n/**\n * An extension of `AuthorizationV2Builder` to help with testing.\n */\nclass TestAuthorizationV2Builder extends AuthorizationV2Builder {\n\n    /**\n     * Set the fixed authorization request date.\n     *\n     * <p>This date will be used even when the `date()` function is called.\n     * \n     * @type {Date} the fixed date to use\n     */\n    get fixedDate() {\n        return this._fixedDate;\n    }\n\n    set fixedDate(val) {\n        const d = (val instanceof Date ? val : new Date());\n        this._fixedDate = d;\n        super.date(d);\n    }\n\n    get signingKeyValid() {\n        return (this.signingKey ? true : false);\n    }\n\n    /**\n     * Set the authorization request date.\n     *\n     * @inheritdoc\n     * @override\n     */\n    date(val) {\n        return super.date(this.fixedDate || val);\n    }\n\n}\n\nexport default TestAuthorizationV2Builder;\n","function mock(XMLHttpRequest) {\n\n    var request = function(url) {\n        const xhr = new XMLHttpRequest();\n        const headers = new Map();\n        const events = new Map();\n        const self = {};\n\n        /** @type {function} */\n        var response;\n\n        \"onload\" in xhr\n            ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n            : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n\n        function callEvent(name, arg) {\n            const fns = events.get(name);\n            if ( fns ) {\n                fns.forEach((fn) => {\n                    fn.call(self, arg);\n                });\n            }\n        }\n        \n        function hasResponse(xhr) {\n            var type = xhr.responseType;\n            return type && type !== \"text\"\n                ? xhr.response // null on error\n                : xhr.responseText; // \"\" on error\n        }\n        \n        function respond(o) {\n            var status = xhr.status, result;\n            if (!status && hasResponse(xhr)\n                    || status >= 200 && status < 300\n                    || status === 304) {\n                result = xhr;\n                if (response) {\n                    try {\n                        result = response.call(self, xhr);\n                    } catch (e) {\n                        event.call(\"error\", request, e);\n                        return;\n                    }\n                } else {\n                    result = xhr;\n                }\n                callEvent(\"load\", result);\n            } else {\n                callEvent(\"error\", o);\n            }\n        }\n\n        self.on = (name, cb) => {\n            let handlers = events.get(name);\n            if ( !handlers ) {\n                handlers = [];\n                events.set(name, handlers);\n            }\n            handlers.push(cb);\n            return self;\n        };\n        \n        self.mimeType = (type) => {\n            headers.set('Accept', type);\n            return self;\n        };\n\n        self.response = (r) => {\n            response = r;\n            return self;\n        };\n\n        self.get = (data, callback) => {\n            return self.send(\"GET\", data, callback);\n        };\n\n        self.post = (data, callback) => {\n            return self.send(\"POST\", data, callback);\n        };\n\n        self.send = (method, data, cb) => {\n            xhr.open(method, url);\n            headers.forEach((v, k) => {\n                xhr.setRequestHeader(k, v);\n            });\n            if ( cb ) {\n                self.on(\"error\", cb).on(\"load\", (xhr) => cb(null, xhr));\n            }\n            callEvent('beforesend', xhr);\n            xhr.send(data);\n            return self;\n        };\n\n        return self;\n    };\n\n    var type = function(defaultMimeType, response) {\n        return function(url, callback) {\n            var r = request(url).mimeType(defaultMimeType).response(response);\n            if (callback != null) {\n                return r.get(callback);\n            }\n            return r;\n        };\n    };\n\n    var json = type(\"application/json\", function(xhr) {\n        return JSON.parse(xhr.responseText);\n    });\n\n    return {\n        request: request,\n        json: json,\n    };\n}\n\nexport default mock;\n"],"names":["TestAuthorizationV2Builder","val","fixedDate","_fixedDate","d","Date","signingKey","AuthorizationV2Builder","mock","XMLHttpRequest","request","url","xhr","headers","Map","events","self","response","onload","onerror","ontimeout","respond","onreadystatechange","o","readyState","callEvent","name","arg","fns","get","forEach","fn","call","hasResponse","type","responseType","responseText","status","result","e","on","cb","handlers","set","push","mimeType","r","data","callback","send","post","method","open","v","k","setRequestHeader","defaultMimeType","json","JSON","parse"],"mappings":"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"}